# -*- coding: utf-8 -*-
"""
Created on Wed Feb  6 11:18:36 2019

@author: 33743
"""

"""
Euler discovered the remarkable quadratic formula:

n**2 + n + 41
It turns out that the formula will produce 40 primes for the consecutive integer values 0≤n≤39. However, when n=40,402+40+41=40(40+1)+41 is divisible by 41, and certainly when n=41,412+41+41 is clearly divisible by 41.

The incredible formula n**2 − 79n + 1601 was discovered, which produces 80 primes for the consecutive values 0≤n≤79. The product of the coefficients, −79 and 1601, is −126479.

Considering quadratics of the form:

n2+an+b, where |a|<1000 and |b|≤1000

where |n| is the modulus/absolute value of n
e.g. |11|=11 and |−4|=4
Find the product of the coefficients, a and b, for the quadratic expression that produces the maximum number of primes for consecutive values of n, starting with n=0.
"""

import math

def isprime(n):
    if n < 2:
        return False
    else:
        for a in range(2, int(math.floor(math.sqrt(n))) + 1):
            if n % a == 0:
                return False
            
    return True


def consecutive_primes(a, b, largest_consecutive, product): 
    n = 0
    
    while isprime((n ** 2) + (a * n) + b):
        n += 1
    
    if n > largest_consecutive:
        return (a * b, n)
    else:
        return (product, largest_consecutive)


largest_consecutive = 0 
product = 0

for a in range(-999, 1000):
    for b in range(-1000, 1001):
        product = consecutive_primes(a, b, largest_consecutive, product)[0]
        largest_consecutive = consecutive_primes(a, b, largest_consecutive, product)[1]
    
print(product)
