
"""
The number 3797 has an interesting property. Being prime itself, it is possible to continuously remove digits from left to right, and remain prime at each stage: 3797, 797, 97, and 7. Similarly we can work from right to left: 3797, 379, 37, and 3.

Find the sum of the only eleven primes that are both truncatable from left to right and right to left.

NOTE: 2, 3, 5, and 7 are not considered to be truncatable primes.
"""

import math

def isprime(n):
    if n < 2:
        return False
    else:
        for a in range(2, int(math.floor(math.sqrt(n))) + 1):
            if n % a == 0:
                return False
            
    return True


counter = 0
primes_sum = 0
i = 8		# 2, 3, 5, and 7 do not qualify. Begin at 8.


while counter < 11:

	st = str(i)
	if '0' in st:
		i += 1
		continue

	st_len = len(st)


	passes = True

	for j in range(1, st_len + 1):
		if not isprime(int(st[ :j ])):
			passes = False
			break

	if passes == True:
		for k in range(0, st_len):
			if not isprime(int(st[ k: ])):
				passes = False
				break

	if passes == True:
		counter += 1
		primes_sum += i
		print(i)

	i += 1


print(primes_sum)
