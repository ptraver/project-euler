# -*- coding: utf-8 -*-
"""
Created on Mon Feb  4 14:19:11 2019

@author: 33743
"""

"""
A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:

012   021   102   120   201   210

What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?
"""

import math, sys          
   
remainder = 100
print(remainder)
digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
answer = []
        
for i in range(max(digits), 0, -1):
    denominator = math.factorial(i)
    
    if remainder < denominator:
        answer.append(digits.pop(0))
    elif remainder % denominator == 0:

        answer.append(digits.pop(int(remainder / denominator) - 1))
        for a in range(1, int(len(digits)) + 1):
            answer.append(digits[-a])
        remainder = 0   # not sure why, but this has to be put in to stop a pop() IndexError being thrown at the very end of output
        print(answer)
        sys.exit
    else:
        quotient = math.floor(remainder / denominator)
        answer.append(digits.pop(quotient))
        remainder -= quotient * math.factorial(i)
