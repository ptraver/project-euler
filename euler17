
"""
If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.

If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?


NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of "and" when writing out numbers is in compliance with British usage.
"""

total_letters = 0

engDict = {
0: 'zero'
,1: 'one'
,2: 'two'
,3: 'three'
,4: 'four'
,5: 'five'
,6: 'six'
,7: 'seven'
,8: 'eight'
,9: 'nine'
,10: 'ten'
,11: 'eleven'
,12: 'twelve'
,13: 'thirteen'
,14: 'fourteen'
,15: 'fifteen'
,16: 'sixteen'
,17: 'seventeen'
,18: 'eighteen'
,19: 'nineteen'
,20: 'twenty'
,30: 'thirty'
,40: 'forty'
,50: 'fifty'
,60: 'sixty'
,70: 'seventy'
,80: 'eighty'
,90: 'ninety'
}

for n in range(1, 1001):
	if n <= 20:
		total_letters += len(engDict[n])
	elif n < 100:
		if n % 10 == 0:
			total_letters += len(engDict[n])
		else:
			total_letters += len(engDict[int(str(n)[0]) * 10]) + len(engDict[int(str(n)[1])])
	elif n < 1000:
		if n % 100 == 0:
			total_letters += len(engDict[int(str(n)[0])]) + len('hundred')
		elif n % 100 <= 20 or n % 10 == 0:
			total_letters += len(engDict[int(str(n)[0])]) + len('hundred') + len('and') + len(engDict[n % 100])
		else:
			total_letters += len(engDict[int(str(n)[0])]) + len('hundred') + len('and') + len(engDict[int(str(n)[1]) * 10]) + len(engDict[int(str(n)[2])])
	else:
		total_letters += len('onethousand')

print(total_letters)
